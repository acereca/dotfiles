global !p
import glob, git, os
import subprocess as sp

def take_sc(subdir, filename):
	#sp.check_output(['xfce4-screenshooter', '-r', '-s', subdir, msg])
	return str(['xfce4-screenshooter', '-r', '-s', os.getcwd() +'/'+ subdir, filename + ".png"])

def link_context(t, filetypes, replacement=None):
	basepath = git.Repo('.', search_parent_directories=True).working_tree_dir
	fl = []
	if t:
		for ft in filetypes:
			fl += [f[len(basepath):].replace('.' + ft, '.' + (ft if replacement is None else replacement)) for f in glob.glob(basepath+'/**/*.'+ft)]

	fl = [f[len(t):] for f in fl if f.startswith(t)]

	if len(fl) == 1:
		return fl[0]

	#return str(len(glob.glob(os.path.abspath(basepath) + "/**/*.md")))
	return f"[{'|'.join(fl)}]"
endglobal

snippet --- "TOML Header Lecturenotes" b
---
title: ${1:`!p snip.rv = snip.basename`}
index: `!p
import glob
def get_local_index():
	return len([f for f in glob.glob("./**/.md") if snip.basename not in f])
snip.rv = get_local_index()
`
created: `!p import time; snip.rv = time.strftime("%Y/%m/%d",time.gmtime())`
---

# $1
$0
endsnippet

snippet <date> "Date comment" Ab
<!-- `!p import time; snip.rv = time.strftime("%d/%m/%Y",time.gmtime())` -->
endsnippet

snippet []() "internal link"
[${1:${VISUAL}}]($2`!p snip.rv = link_context(t[2], ['md'], 'html')
`#`!p snip.rv = re.sub(r"[\s']+", '-', t[1].lower())
`)
endsnippet

snippet "\)#(.*)" "mark figure" ir
)

${1:<!--{figure: #${2:`!p snip.rv=match.group(1)`} ${3:.noinvert}}-->}
endsnippet

snippet -.- "Unicode Circle" A
â€¢
endsnippet

snippet ::: "Fenced Block" b
::: $1

${2:### $3
}${0:${VISUAL}}
:::
endsnippet

snippet $$ "Display Math w/ align" b
\\[
	$0
\\]
endsnippet

snippet ![] "Screengrab file" b
`!p
	import subprocess
`
endsnippet
